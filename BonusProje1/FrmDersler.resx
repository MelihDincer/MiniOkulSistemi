<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>